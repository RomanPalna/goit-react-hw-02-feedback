{"version":3,"sources":["Components/Statistics.js","Components/Notification.js","Components/FeedbackOptions.js","Components/Section.js","Components/Feedback.js","App.js","index.js"],"names":["Statistics","bad","neutral","good","total","positivePercentage","Notification","message","FeedbackOptions","onClick","Section","title","children","Feedback","state","visible","countGoodFeed","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","countNeutralFeed","countBadFeed","Object","values","reduce","feedbackCurr","feedbackNext","percentage","isNaN","Math","round","this","feed","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAWeA,EATI,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,wCAAWF,KACX,2CAAcD,KACd,uCAAUD,KACV,yCAAYG,KACZ,qDAAwBC,EAAxB,WCJWC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,8BAAMA,KCO7BC,EAPS,SAAC,GAAD,IAAGL,EAAH,EAAGA,KAAMD,EAAT,EAASA,QAASD,EAAlB,EAAkBA,IAAlB,OACtB,gCACE,wBAAQQ,QAASN,EAAjB,kBACA,wBAAQM,QAASP,EAAjB,qBACA,wBAAQO,QAASR,EAAjB,qBCGWS,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,6BAAKD,IACJC,MCEgBC,E,4MAKnBC,MAAQ,CACNX,KAAM,EACND,QAAS,EACTD,IAAK,EACLc,SAAS,G,EAGXC,cAAgB,WACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1Bf,KAAMe,EAAUf,KAAO,MAEzB,EAAKgB,qBACL,EAAKC,mC,EAGPC,iBAAmB,WACjB,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CAC1BhB,QAASgB,EAAUhB,QAAU,MAE/B,EAAKiB,qBACL,EAAKC,mC,EAGPE,aAAe,WACb,EAAKL,UAAS,SAAAC,GAAS,MAAK,CAC1BjB,IAAKiB,EAAUjB,IAAM,MAEvB,EAAKkB,qBACL,EAAKC,mC,EAGPD,mBAAqB,WACnB,OAAOI,OAAOC,OAAO,EAAKV,OAAOW,QAAO,SACtCC,EACAC,GAEA,OAAOD,EAAeC,M,EAI1BP,gCAAkC,WAChC,IAAMQ,EAAc,EAAKd,MAAMX,KAAO,EAAKgB,qBAAwB,IACnE,OAAIU,MAAMD,GACD,EAEAE,KAAKC,MAAMH,I,uDAKpB,OACEL,OAAOC,OAAOQ,KAAKlB,OAAOW,QAAO,SAAUC,EAAcC,GACvD,IAAMM,EAAOP,EAAeC,EAE5B,GAAIM,EAAO,EACT,OAAOA,KAGN,EAGH,8BACE,eAAC,EAAD,CAAStB,MAAM,wBAAf,UACE,cAAC,EAAD,CACER,KAAM6B,KAAKhB,cACXd,QAAS8B,KAAKX,iBACdpB,IAAK+B,KAAKV,eAEZ,cAAC,EAAD,CACEnB,KAAM6B,KAAKlB,MAAMX,KACjBD,QAAS8B,KAAKlB,MAAMZ,QACpBD,IAAK+B,KAAKlB,MAAMb,IAChBG,MAAO4B,KAAKb,qBACZd,mBAAoB2B,KAAKZ,yCAO/B,8BACE,eAAC,EAAD,CAAST,MAAM,wBAAf,UACE,cAAC,EAAD,CACER,KAAM6B,KAAKhB,cACXd,QAAS8B,KAAKX,iBACdpB,IAAK+B,KAAKV,eAEZ,cAAC,EAAD,CAAcf,QAAQ,+B,GA5FI2B,aCDvBC,MAJf,WACE,OAAO,cAAC,EAAD,KCETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b2433cc1.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ bad, neutral, good, total, positivePercentage }) => (\r\n  <ul>\r\n    <li>Good: {good}</li>\r\n    <li>Neutral: {neutral}</li>\r\n    <li>Bad: {bad}</li>\r\n    <li>Total: {total}</li>\r\n    <li>Positive feedback: {positivePercentage}%</li>\r\n  </ul>\r\n);\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <div>{message}</div>;\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ good, neutral, bad }) => (\r\n  <div>\r\n    <button onClick={good}>Good</button>\r\n    <button onClick={neutral}>Neutral</button>\r\n    <button onClick={bad}>Bad</button>\r\n  </div>\r\n);\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  good: PropTypes.func.isRequired,\r\n  neutral: PropTypes.func.isRequired,\r\n  bad: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.array.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport Statistics from './Statistics';\r\nimport Notification from './Notification';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Section from './Section';\r\n// import s from './Feedback.module.css';\r\n\r\nexport default class Feedback extends Component {\r\n  static propTypes = {\r\n    //\r\n  };\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    visible: true,\r\n  };\r\n\r\n  countGoodFeed = () => {\r\n    this.setState(prevState => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countNeutralFeed = () => {\r\n    this.setState(prevState => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countBadFeed = () => {\r\n    this.setState(prevState => ({\r\n      bad: prevState.bad + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce(function (\r\n      feedbackCurr,\r\n      feedbackNext,\r\n    ) {\r\n      return feedbackCurr + feedbackNext;\r\n    });\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const percentage = (this.state.good / this.countTotalFeedback()) * 100;\r\n    if (isNaN(percentage)) {\r\n      return 0;\r\n    } else {\r\n      return Math.round(percentage);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      Object.values(this.state).reduce(function (feedbackCurr, feedbackNext) {\r\n        const feed = feedbackCurr + feedbackNext;\r\n\r\n        if (feed > 0) {\r\n          return feed;\r\n        }\r\n        return;\r\n      }) > 0\r\n    ) {\r\n      return (\r\n        <div>\r\n          <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions\r\n              good={this.countGoodFeed}\r\n              neutral={this.countNeutralFeed}\r\n              bad={this.countBadFeed}\r\n            />\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          </Section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions\r\n              good={this.countGoodFeed}\r\n              neutral={this.countNeutralFeed}\r\n              bad={this.countBadFeed}\r\n            />\r\n            <Notification message=\"No feedback given\" />\r\n          </Section>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import Feedback from './Components/Feedback';\r\n\r\nfunction App() {\r\n  return <Feedback />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}