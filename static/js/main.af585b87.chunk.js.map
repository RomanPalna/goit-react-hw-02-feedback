{"version":3,"sources":["Components/Statistics.js","Components/Notification.js","Components/FeedbackOptions.js","Components/Section.js","Components/Feedback.js","App.js","index.js"],"names":["Statistics","bad","neutral","good","total","positivePercentage","Notification","message","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","shortid","generate","Section","title","children","Feedback","state","countGoodFeed","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","countNeutralFeed","countBadFeed","percentage","isNaN","Math","round","e","elem","target","Object","keys","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAWeA,EATI,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,wCAAWF,KACX,2CAAcD,KACd,uCAAUD,KACV,yCAAYG,KACZ,qDAAwBC,EAAxB,WCJWC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,8BAAMA,K,gBCkB7BC,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLC,KAAMF,EACNG,QAASL,EAJX,SAMGE,GALII,IAAQC,kBCCRC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,6BAAKD,IACJC,MCEgBC,E,4MAKnBC,MAAQ,CACNnB,KAAM,EACND,QAAS,EACTD,IAAK,G,EAGPsB,cAAgB,WACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BtB,KAAMsB,EAAUtB,KAAO,MAEzB,EAAKuB,qBACL,EAAKC,mC,EAGPC,iBAAmB,WACjB,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CAC1BvB,QAASuB,EAAUvB,QAAU,MAE/B,EAAKwB,qBACL,EAAKC,mC,EAGPE,aAAe,WACb,EAAKL,UAAS,SAAAC,GAAS,MAAK,CAC1BxB,IAAKwB,EAAUxB,IAAM,MAEvB,EAAKyB,qBACL,EAAKC,mC,EAGPD,mBAAqB,WAAO,IAAD,EACM,EAAKJ,MAEpC,OAHyB,EACjBnB,KADiB,EACXD,QADW,EACFD,K,EAKzB0B,gCAAkC,WAChC,IAAMG,EAAc,EAAKR,MAAMnB,KAAO,EAAKuB,qBAAwB,IACnE,OAAIK,MAAMD,GACD,EAEAE,KAAKC,MAAMH,I,EAItBpB,gBAAkB,SAAAwB,GAChB,IAAMC,EAAOD,EAAEE,OAAOtB,KACtB,EAAKU,UAAS,SAAAC,GAAS,sBACpBU,EAAOV,EAAUU,GAAQ,O,uDAK5B,OACE,8BACE,eAAC,EAAD,CAAShB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEV,QAAS4B,OAAOC,KAAKC,KAAKjB,OAC1BZ,gBAAiB6B,KAAK7B,kBAEO,IAA9B6B,KAAKb,qBACJ,cAAC,EAAD,CAAcnB,QAAQ,sBAEtB,cAAC,EAAD,CACEJ,KAAMoC,KAAKjB,MAAMnB,KACjBD,QAASqC,KAAKjB,MAAMpB,QACpBD,IAAKsC,KAAKjB,MAAMrB,IAChBG,MAAOmC,KAAKb,qBACZrB,mBAAoBkC,KAAKZ,6C,GAzEDa,aCDvBC,MAJf,WACE,OAAO,cAAC,EAAD,KCETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.af585b87.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ bad, neutral, good, total, positivePercentage }) => (\r\n  <ul>\r\n    <li>Good: {good}</li>\r\n    <li>Neutral: {neutral}</li>\r\n    <li>Bad: {bad}</li>\r\n    <li>Total: {total}</li>\r\n    <li>Positive feedback: {positivePercentage}%</li>\r\n  </ul>\r\n);\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <div>{message}</div>;\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          key={shortid.generate()}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.array.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport Statistics from './Statistics';\r\nimport Notification from './Notification';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Section from './Section';\r\n// import s from './Feedback.module.css';\r\n\r\nexport default class Feedback extends Component {\r\n  static propTypes = {\r\n    //\r\n  };\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countGoodFeed = () => {\r\n    this.setState(prevState => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countNeutralFeed = () => {\r\n    this.setState(prevState => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countBadFeed = () => {\r\n    this.setState(prevState => ({\r\n      bad: prevState.bad + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const percentage = (this.state.good / this.countTotalFeedback()) * 100;\r\n    if (isNaN(percentage)) {\r\n      return 0;\r\n    } else {\r\n      return Math.round(percentage);\r\n    }\r\n  };\r\n\r\n  onLeaveFeedback = e => {\r\n    const elem = e.target.name;\r\n    this.setState(prevState => ({\r\n      [elem]: prevState[elem] + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n          {this.countTotalFeedback() === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Feedback from './Components/Feedback';\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}